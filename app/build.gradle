apply plugin: 'com.android.application'

Properties props = new Properties()
props.load(new FileInputStream(file(rootProject.file("signing.properties"))))

android {

    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }

    signingConfigs {
        release {
            keyAlias props['signing.alias']
            keyPassword props['signing.password']
            storeFile file(rootProject.file("debug.keystore"))
            storePassword props['signing.password']
        }

        debug {
            keyAlias props['signing.jjdxm_alias']
            keyPassword props['signing.jjdxm_password']
            storeFile file(rootProject.file("debug.keystore"))
            storePassword props['signing.jjdxm_password']
        }
    }

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        //applicationId "com.dou361.jjdxm_ijkplayer"
        applicationId "com.done.player"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
//        versionCode rootProject.ext.versionCode
//        versionName rootProject.ext.versionName
        versionCode 2
        versionName "1.2"

//        ndk {
//            abiFilters "armeabi-v7a"  // 指定要ndk需要兼容的架构(这样其他依赖包里mips,x86,armeabi,arm-v8之类的so会被过滤掉)
//        }
    }
    buildTypes {

        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile rootProject.ext.jjdxm_v7
    compile 'com.jakewharton:butterknife:+'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile(name: 'library', ext: 'aar')
    compile project(':jjdxm-ijkplayer')

    compile 'com.android.support.constraint:constraint-layout:+'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'com.squareup.okhttp:okhttp:2.5.0'
    compile 'com.squareup.okio:okio:1.7.0'
    compile 'com.github.bumptech.glide:okhttp-integration:1.4.0'
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.android.support:design:24.2.1'
    compile 'com.mcxiaoke.volley:library:1.0.19'
    compile 'in.srain.cube:ultra-ptr:1.0.11'
    compile 'de.hdodenhof:circleimageview:2.0.0'
    compile 'com.youth.banner:banner:1.4.10'  //轮播图框架
    //刷新
    compile 'com.android.support:appcompat-v7:+'//版本随意
    compile 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.4-5'
    compile 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.3'

//    根据需要支持去拓展，在jjdxm-ijkplayer中默认加入了armv7a的了
    compile 'com.dou361.ijkplayer-armv7a:jjdxm-ijkplayer-armv7a:1.0.0'
    compile 'com.dou361.ijkplayer-armv5:jjdxm-ijkplayer-armv5:1.0.0'
    compile 'com.dou361.ijkplayer-arm64:jjdxm-ijkplayer-arm64:1.0.0'
    compile 'com.dou361.ijkplayer-x86:jjdxm-ijkplayer-x86:1.0.0'
    compile 'com.dou361.ijkplayer-x86_64:jjdxm-ijkplayer-x86_64:1.0.0'

    //网络获取直播视频
    compile 'com.squareup.retrofit2:retrofit:2.0.0-beta4'
    compile 'com.squareup.retrofit2:converter-scalars:2.0.0'
    compile 'com.squareup.retrofit2:converter-gson:2.0.0-beta4'
    compile 'com.squareup.okhttp3:okhttp:3.0.1'
    compile 'com.alibaba:fastjson:1.2.14'


}
